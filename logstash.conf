##########################################
# Logstash Config – Clean & Dynamic
##########################################

input {
  beats {
    port => 5044
  }
}

filter {
  ##########################################
  # 1️⃣ Parse JSON logs
  ##########################################
  json {
    source => "message"
    target => "parsed"
    skip_on_invalid_json => true
  }

  ##########################################
  # 2️⃣ Promote parsed fields
  ##########################################
  mutate {
    add_field => {
      "request_id" => "%{[parsed][request_id]}"
      "status"     => "%{[parsed][status]}"
      "code"       => "%{[parsed][code]}"
      "log_service" => "%{[parsed][log_service]}"
      "log_api"     => "%{[parsed][log_api]}"
    }
  }

  ##########################################
  # 3️⃣ Fallback values if missing
  ##########################################
  if ![log_service] or [log_service] == "" {
    mutate { replace => { "log_service" => "unknown" } }
  }

  if ![log_api] or [log_api] == "" {
    mutate { replace => { "log_api" => "unknown" } }
  }

  ##########################################
  # 4️⃣ Clean field values for safe index names
  ##########################################
  mutate {
    lowercase => ["log_service", "log_api"]
    gsub => [
      "log_service", "[^a-z0-9]+", "-",
      "log_api",     "[^a-z0-9]+", "-"
    ]
  }

  ##########################################
  # 5️⃣ Store dataset name in metadata for dynamic routing
  ##########################################
  mutate {
    add_field => { "[@metadata][dataset]" => "%{log_service}" }
  }

  ##########################################
  # 6️⃣ Remove unused fields
  ##########################################
  prune {
    whitelist_names => [
      "@timestamp",
      "log_service",
      "log_api",
      "log_identifier",
      "environment",
      "status",
      "code",
      "message",
      "request_id",
      "parsed"
    ]
  }
}

output {
  ##########################################
  # 1️⃣ Elasticsearch dynamic routing
  ##########################################
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    user => "${ELASTIC_USERNAME}"
    password => "${ELASTIC_PASSWORD}"
    ssl => false
    data_stream => true
    data_stream_type => "logs"
    data_stream_dataset => "%{[@metadata][dataset]}"
    data_stream_namespace => "default"
  }

  ##########################################
  # 2️⃣ Debugging – optional stdout
  ##########################################
  stdout {
    codec => rubydebug
  }
}
